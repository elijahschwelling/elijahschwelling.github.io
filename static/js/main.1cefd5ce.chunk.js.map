{"version":3,"sources":["components/VRST19.PNG","components/Avatar.png","components/Resume.png","components/BrowserPokedex.PNG","components/SpotifyDataTool.PNG","components/Breakout.PNG","components/Portfolio.png","components/CHI20.PNG","components/VRST18.PNG","components/Home.js","components/Resume.js","components/Projects.js","components/Experience.js","components/Publications.js","components/Main.js","components/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","div","animate","opacity","transition","duration","Jumbotron","className","id","Resume","Card","Img","variant","src","resume","Projects","VRST19","Header","as","Body","Text","Link","href","BrowserPokedex","Breakout","SpotifyDataTool","Portfolio","Experience","Subtitle","Publications","CHI20","VRST18","Main","exact","path","Container","fluid","Col","Image","Avatar","rounded","Nav","defaultActiveKey","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1cefd5ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VRST19.4a1fde9f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Avatar.62295b39.png\";","module.exports = __webpack_public_path__ + \"static/media/Resume.a013e7d3.png\";","module.exports = __webpack_public_path__ + \"static/media/BrowserPokedex.a18003f3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/SpotifyDataTool.1106d12e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Breakout.6de1717b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Portfolio.68f9be09.png\";","module.exports = __webpack_public_path__ + \"static/media/CHI20.2d57e0c7.PNG\";","module.exports = __webpack_public_path__ + \"static/media/VRST18.f21441e9.PNG\";","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <motion.div animate={{opacity: [0, 1]}} transition={{duration: 0.2}}>\r\n            <Jumbotron className=\"page-title homepage-title\">\r\n                <h1>ELIJAH SCHWELLING</h1>\r\n                <h4>\r\n                    Computer Science student at the University of Maryland interested in graphics, blended reality, web development, data visualization, \r\n                    design, and music.\r\n                </h4>\r\n            </Jumbotron>\r\n            <div id=\"homepage-skill-list\">\r\n                <h6>Skills and technologies include:</h6>\r\n                <ul>\r\n                    <li><h6>Languages:</h6></li>\r\n                        <ul>\r\n                            <li><h6>Java, C, JavaScript, Ruby, Rust, Racket, OCaml, Swift, HTML, CSS, HLSL, Python, C#</h6></li>\r\n                        </ul>\r\n                    <li><h6>Libraries, Frameworks, and APIs:</h6></li>\r\n                        <ul>\r\n                            <li><h6>React, JQuery, D3.js, Node.js, Express.js, Bootstrap, MongoDB, ARKit</h6></li>\r\n                        </ul>\r\n                    <li><h6>Development Tools:</h6></li>\r\n                        <ul>\r\n                            <li><h6>Git, Unix, Unity, XCode, Processing, Tableau, MATLAB</h6></li>\r\n                        </ul>\r\n                </ul>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport resume from './Resume.png'\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <motion.div animate={{opacity: [0, 1]}} transition={{duration: 0.2}}>\r\n            <Jumbotron className=\"page-title\">\r\n                <h1>RESUME</h1>\r\n                <h4>SUMMARY OF WORK AND EXPERIENCES SO FAR</h4>\r\n            </Jumbotron>\r\n            <Card>\r\n                <Card.Img variant=\"bottom\" src={resume} />\r\n            </Card>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Resume;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport BrowserPokedex from './BrowserPokedex.PNG';\r\nimport SpotifyDataTool from './SpotifyDataTool.PNG'\r\nimport VRST19 from './VRST19.PNG';\r\nimport Breakout from './Breakout.PNG';\r\nimport Portfolio from './Portfolio.png';\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <motion.div animate={{opacity: [0, 1]}} transition={{duration: 0.2}}>\r\n            <Jumbotron className=\"page-title\">\r\n                <h1>PROJECTS</h1>\r\n                <h4>PROJECTS IN PROGRAMMING AND DESIGN</h4>\r\n            </Jumbotron>\r\n            <div id=\"test\">\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={VRST19} />\r\n                    <Card.Header as=\"h5\">\r\n                        Paint Sound\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            Generative music application for iOS allowing users to draw shapes in augmented reality\r\n                            world space that act as audio sequencers. Built custom virtual synthesizer and interface for \r\n                            generating hundreds of unique sounds in the application. Built using Swift, AudioKit, \r\n                            ARKit, and XCode.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=kKqnSsb4sR4\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={BrowserPokedex} />\r\n                    <Card.Header as=\"h5\">\r\n                            Browser Pokedex\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            An interactive Pokedex for viewing the first 7 generations of Pokemon in browser, \r\n                            built using D3.js, jQuery, HTML, and CSS.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=i2gwXXyDpU8\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={Breakout} />\r\n                    <Card.Header as=\"h5\">\r\n                        Breakout\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            An interactive implementation of Atari Breakout, built using Java and Processing.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=KEIdbovGPdg\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={SpotifyDataTool} />\r\n                    <Card.Header as=\"h5\">\r\n                            Spotify Data Tool\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            An interactive tool for looking at your top tracks on Spotify by album cover and\r\n                            track title/artist, built using the Spotify API, Express, D3.js, jQuery, HTML, CSS.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=HE3-jG0UbdM\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={Portfolio} />\r\n                    <Card.Header as=\"h5\">\r\n                            Online Portfolio\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            A personal online portfolio (the one you're on right now!) for showcasing projects and \r\n                            experience, built from the ground up using React and Bootstrap.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport { Card } from 'react-bootstrap';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Experience = () => {\r\n    return (\r\n        <motion.div animate={{opacity: [0, 1]}} transition={{duration: 0.2}}>\r\n            <Jumbotron className=\"page-title\">\r\n                <h1>EXPERIENCE</h1>\r\n                <h4>EXTRA-CURRICULAR WORK EXPERIENCE</h4>\r\n            </Jumbotron>\r\n            <div>\r\n                <Card>\r\n                    <Card.Header as=\"h5\">\r\n                        Undergraduate Research Assistant\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        \r\n                        <Card.Subtitle>\r\n                            University of Maryland Graphics Visualization and Informatics Lab\r\n                        </Card.Subtitle>\r\n                        <Card.Text>\r\n                            Software engineering on application built in Unity3D used as a practical tool for visualizing\r\n                            meteorological data in 3D space. Wrote code to ingest binary NetCDF-4 data and use it to\r\n                            render 3D iso-surface efficiently on GPU with compute shader (HLSL), and built 3D user interface\r\n                            to interact with data in Unity3D (C#), as well as code and UI for serializing application state in\r\n                            frames to allow for recording and playback of data interaction.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Header as=\"h5\">\r\n                            Instructor for Full-stack Web Development with JavaScript and Node.js\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Subtitle>\r\n                            University of Maryland College of Computer, Mathematical, and Natural Sciences\r\n                        </Card.Subtitle>\r\n                        <Card.Text>\r\n                            Instructed class of roughly thirty students in the fundamentals of full-stack web development\r\n                            using technologies including Node, Express, MongoDB, JavaScript, and HTML/CSS.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Header as=\"h5\">\r\n                        First-Year Innovation and Research Experience Summer Fellow\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Subtitle>\r\n                            University of Maryland College of Computer, Mathematical, and Natural Sciences\r\n                        </Card.Subtitle>\r\n                        <Card.Text>\r\n                            Developed augmented reality mobile application using Vuforia image recognition library and REST API  in Unity (C#)\r\n                            for automatically generating 3D renderings of artwork in a museum setting. Application allows client to scan a \r\n                            painting using cloud recognition technology and generates 3D mesh from painting efficiently at runtime.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Experience;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport CHI20 from './CHI20.PNG';\r\nimport VRST19 from './VRST19.PNG';\r\nimport VRST18 from './VRST18.PNG';\r\n\r\nconst Publications = () => {\r\n    return (\r\n        <motion.div animate={{opacity: [0, 1]}} transition={{duration: 0.2}}>\r\n            <Jumbotron className=\"page-title\">\r\n                <h1>PUBLICATIONS</h1>\r\n                <h4>PUBLISHED WORK AND PAPERS</h4>\r\n            </Jumbotron>\r\n            <div>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={CHI20} />\r\n                    <Card.Header as=\"h5\">\r\n                            MeteoVis: Visualizing Meteorological Events in Virtual Reality\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        \r\n                        <Card.Subtitle>\r\n                            Proceedings of the Extended Abstracts of the 2020 CHI Conference on Human Factors in Computing Systems, 2020\r\n                        </Card.Subtitle>\r\n                        <Card.Text>\r\n                            Software engineering on application built in Unity3D used as a practical tool for visualizing\r\n                            meteorological data in 3D space. Wrote code to ingest binary NetCDF-4 data and use it to\r\n                            render 3D iso-surface efficiently on GPU with compute shader (HLSL), and built 3D user interface\r\n                            to interact with data in Unity3D (C#), as well as code and UI for serializing application state in\r\n                            frames to allow for recording and playback of data interaction. Authors are David Li, Eric Lee, \r\n                            Elijah Schwelling, Mason Quick, Patrick Meyers, Ruofei Du, and Amitabh Varshney.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://dl.acm.org/doi/10.1145/3334480.3382921\">Read Paper</Card.Link>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=pdkXhkTtimY\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={VRST19} />\r\n                    <Card.Header as=\"h5\">\r\n                        Spatially Accurate Generative Music with AR Drawing\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Subtitle>\r\n                            Proceedings of the 25th ACM Symposium on Virtual Reality Software and Technology, 2019\r\n                        </Card.Subtitle>\r\n                        <Card.Text>\r\n                            Built generative music application for iOS allowing users to draw shapes in augmented reality\r\n                            world space that act as audio sequencers. Built custom virtual synthesizer for generating custom\r\n                            sounds in the application using the AudioKit open-source library for Swift. Authors are Kyungjin\r\n                            Yoo and Elijah Schwelling.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://dl.acm.org/doi/10.1145/3359996.3365048\">Read Paper</Card.Link>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=kKqnSsb4sR4\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={VRST18} />\r\n                    <Card.Header as=\"h5\">\r\n                        Automatic 3D Modeling of Artwork and Visualizing Audio in an Augmented Reality Environment\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Subtitle>\r\n                            Proceedings of the 24th ACM Symposium on Virtual Reality Software and Technology, 2018\r\n                        </Card.Subtitle>\r\n                        <Card.Text>\r\n                            Developed augmented reality mobile application using Vuforia library and Unity3D (C#) for automatically\r\n                            generating 3D renderings of artwork in a museum setting. Application allows client to scan a\r\n                            painting using cloud recognition technology and generates 3D mesh from painting efficiently at\r\n                            runtime. Authors are Elijah Schwelling and Kyungjin Yoo.\r\n                        </Card.Text>\r\n                        <Card.Link href=\"https://dl.acm.org/doi/10.1145/3281505.3281617\">Read Paper</Card.Link>\r\n                        <Card.Link href=\"https://www.youtube.com/watch?v=vVRU9urHgsg\">Video Demo</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Publications;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport Resume from './Resume.js';\r\nimport Projects from './Projects.js';\r\nimport Experience from './Experience.js';\r\nimport Publications from './Publications.js';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home></Home>\r\n                </Route>\r\n                <Route exact path=\"/resume\">\r\n                    <Resume></Resume>\r\n                </Route>\r\n                <Route exact path=\"/projects\">\r\n                    <Projects></Projects>\r\n                </Route>\r\n                <Route exact path=\"/experience\">\r\n                    <Experience></Experience>\r\n                </Route>\r\n                <Route exact path=\"/publications\">\r\n                    <Publications></Publications>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport Avatar from './Avatar.png';\r\nimport Main from './Main.js';\r\n\r\nimport './Portfolio.css';\r\n\r\nconst Portfolio = () => {\r\n    return (\r\n        <Container fluid>\r\n            <div className=\"main-background\"></div>\r\n            <Col className=\"sidebar\">\r\n                <Image className=\"sidebar-avatar\" src={Avatar} rounded />\r\n            <h2 className=\"sidebar-name\">Elijah Schwelling</h2>\r\n            <Nav defaultActiveKey=\"/Home\" className=\"flex-column\">\r\n            <Nav.Link className=\"sidebar-link\" to=\"/\">HOME</Nav.Link>\r\n            <Nav.Link className=\"sidebar-link\" to=\"/projects\">PROJECTS</Nav.Link>\r\n            <Nav.Link className=\"sidebar-link\" to=\"/publications\">PUBLICATIONS</Nav.Link>\r\n            <Nav.Link className=\"sidebar-link\" to=\"/experience\">EXPERIENCE</Nav.Link>\r\n            <Nav.Link className=\"sidebar-link\" to=\"/resume\">RESUME</Nav.Link>\r\n            </Nav>\r\n            </Col>\r\n            <Col className=\"main\">\r\n                <Main></Main>\r\n            </Col>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Portfolio;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/Portfolio.css'\nimport Portfolio from './components/Portfolio.js';\n\nfunction App() {\n  return (\n    <Portfolio></Portfolio>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}